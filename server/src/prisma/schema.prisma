generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model bookings {
  id          Int       @id @default(autoincrement())
  guest_id    Int?
  listing_id  Int?
  start_date  DateTime  @db.Date
  end_date    DateTime  @db.Date
  total_price Decimal   @db.Decimal(10, 2)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  rating      Int?
  users       users?    @relation(fields: [guest_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  listings    listings? @relation(fields: [listing_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  payment     payments? // ðŸ‘ˆ one-to-one relation
}

model payments {
  id                  Int       @id @default(autoincrement())
  razorpay_order_id   String
  razorpay_payment_id String
  razorpay_signature  String
  booking_id          Int       @unique
  created_at          DateTime  @default(now()) @db.Timestamp(6)

  booking             bookings  @relation(fields: [booking_id], references: [id], onDelete: Cascade)
}

model listings {
  id              Int        @id @default(autoincrement())
  title           String
  description     String
  location        String
  price_per_night Decimal    @db.Decimal(10, 2)
  image_url       String[]
  created_at      DateTime?  @default(now()) @db.Timestamp(6)
  average_rating  Decimal?   @default(5) @db.Decimal(2, 1)
  bookings        bookings[]
}

model users {
  id           Int        @id @default(autoincrement())
  name         String
  email        String     @unique
  password     String
  created_at   DateTime?  @default(now()) @db.Timestamp(6)
  phone_number String     @unique @db.VarChar(15)
  bookings     bookings[]
}
